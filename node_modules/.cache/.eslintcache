[{"/Users/tatiananazarova/Desktop/ADALAB/03.MODULO 3/modulo-3-evaluacion-intermedia-Tatiana-Na/src/index.js":"1","/Users/tatiananazarova/Desktop/ADALAB/03.MODULO 3/modulo-3-evaluacion-intermedia-Tatiana-Na/src/components/App.js":"2"},{"size":480,"mtime":1659628913843,"results":"3","hashOfConfig":"4"},{"size":2550,"mtime":1660899265460,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hhmg8w",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/tatiananazarova/Desktop/ADALAB/03.MODULO 3/modulo-3-evaluacion-intermedia-Tatiana-Na/src/index.js",[],[],"/Users/tatiananazarova/Desktop/ADALAB/03.MODULO 3/modulo-3-evaluacion-intermedia-Tatiana-Na/src/components/App.js",["13"],[],"import logo from '../images/logo.svg';\nimport '../styles/App.scss';\nimport information from '../data/information.json'\nimport { useState } from 'react';\n\nfunction App() {\n\nconst [data, setData] = useState(information);\nconst [newInfo, setNewInfo] = useState(\n  {\n    quote: \" \",\n    character: \" \",\n  }\n);\nconst [filter, setFilter] = useState('');\n\nconst allInfo = data\n.filter ((info) => {\n  return info.quote.toLowerCase().includes(filter.toLowerCase())\n \n})\n.map((info) => {\n  return (\n<li className=\"phrase_card\">\n            <p>\n              <label className=\"phrase\">{info.quote}</label>\n            </p>\n            <p>\n              <label className=\"phrase_author\">{info.character}</label>\n            </p>\n          </li>\n  );\n});\n\nconst handleNewInfo = (ev) => {\n  setNewInfo({\n    ...newInfo,\n    [ev.target.id]: ev.target.value\n  });\n  console.log(ev.target.value);\n}\n\nconst handleClick = (ev) => {\nev.preventDefault();\nsetData([...data, newInfo]);\nsetNewInfo( \n{\n  quote: \" \",\n  character: \" \",\n}\n)};\n\nconst handleFilter = (ev) => {\n  setFilter(ev.target.value)\n}\n\n\n\n\n  return ( \n  <>\n  <h2>Frases de Friends</h2>\n  {allInfo}\n  <form>\n  <label htmlFor=\"new_phrase\" className=\"text-fill\">Frase</label>\n          <input\n            className=\"new\"\n            type=\"text\"\n            name=\"phrase\"\n            id=\"quote\"\n            value = {newInfo.quote}\n            onChange = {handleNewInfo}\n            \n\n          />\n          <label htmlFor=\"new_character\" className=\"text-fill\">Personaje</label>\n          <input\n            className=\"new\"\n            type=\"text\"\n            name=\"character\"\n            id=\"character\"\n            value = {newInfo.character}\n            onChange = {handleNewInfo}\n       \n          />\n          <input className=\"new_phrase_btn\" type=\"button\" value=\"AÃ±adir la nueva frase\" onClick={handleClick} />\n        </form>\n\n        <form>\n  <label htmlFor=\"new_filter_quote\" className=\"filter_quote\">Filtrar por frase</label>\n          <input\n            className=\"filter_what\"\n            type=\"text\"\n            name=\"phrase\"\n            id=\"quote\"\n            value = {filter}\n            onChange = {handleFilter}\n            \n\n          />\n          <label htmlFor=\"new_filter_character\" className=\"filter_character\">Filtrar por personaje</label>\n          <input\n            className=\"filter_who\"\n            type=\"text\"\n            name=\"character\"\n            id=\"character\"\n            value = {filter}\n           \n          />\n          \n        </form>\n  </>\n  );\n\n}\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":1,"column":8,"nodeType":"16","messageId":"17","endLine":1,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]